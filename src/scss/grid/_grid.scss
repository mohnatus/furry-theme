.container {
  width: 100%;
  max-width: 1300px;
  margin-left: auto;
  margin-right: auto;
  padding-left: $gap;
  padding-right: $gap;

  &--narrow {
    max-width: 1200px;
  }
}

.row {
  margin-left: $gap * -1 / 2;
  margin-right: $gap * -1 / 2;

  display: flex;
  flex-wrap: wrap;
}

.col {
  padding-left: $gap / 2;
  padding-right: $gap / 2;

  @for $i from 1 through $columnsCount {
    &-#{$i} {
      @include cols($i);
    }
  }

  @include small-and-up {
    @for $i from 1 through $columnsCount {
      &-sm-#{$i} {
        @include cols($i);
      }
    }
  }

  @include medium-and-up {
    @for $i from 1 through $columnsCount {
      &-md-#{$i} {
        @include cols($i);
      }
    }
  }

  @include large-and-up {
    @for $i from 1 through $columnsCount {
      &-lg-#{$i} {
        @include cols($i);
      }
    }
  }

  @include extra-large-and-up {
    @for $i from 1 through $columnsCount {
      &-xl-#{$i} {
        @include cols($i);
      }
    }
  }
}

/* margins */

.m {
  @include mediaSpace('margin', '');
  @include mediaAutoMargin('');

  @include small-and-up {
    @include mediaSpace('margin', '-sm');
    @include mediaAutoMargin('-sm');
  }

  @include medium-and-up {
    @include mediaSpace('margin', '-md');
    @include mediaAutoMargin('-md');
  }

  @include large-and-up {
    @include mediaSpace('margin', '-lg');
    @include mediaAutoMargin('-lg');
  }

  @include extra-large-and-up {
    @include mediaSpace('margin', '-xl');
    @include mediaAutoMargin('-xl');
  }
}

/* paddings */
.p {
  @include mediaSpace('padding', '');

  @include small-and-up {
    @include mediaSpace('padding', '-sm');
  }

  @include medium-and-up {
    @include mediaSpace('padding', '-md');
  }

  @include large-and-up {
    @include mediaSpace('padding', '-lg');
  }

  @include extra-large-and-up {
    @include mediaSpace('padding', '-xl');
  }
}

/* offset */
.offset {
  @for $i from 1 through $columnsCount {
    &-#{$i} {
      @include offset($i);
    }
  }

  @include small-and-up {
    @for $i from 1 through $columnsCount {
      &-sm-#{$i} {
        @include offset($i);
      }
    }
  }

  @include medium-and-up {
    @for $i from 1 through $columnsCount {
      &-md-#{$i} {
        @include offset($i);
      }
    }
  }

  @include large-and-up {
    @for $i from 1 through $columnsCount {
      &-lg-#{$i} {
        @include offset($i);
      }
    }
  }

  @include extra-large-and-up {
    @for $i from 1 through $columnsCount {
      &-xl-#{$i} {
        @include offset($i);
      }
    }
  }
}

/* display */
.d-block {
  display: block;
}

.d-inline-block {
  display: inline-block;
}

/* flex */
.d-flex {
  display: flex;
}
.direction {
  &-column {
    flex-direction: column;
    &-reverse {
      flex-direction: column-reverse;
    }
  }
  &-row {
    flex-direction: row;
    &-reverse {
      flex-direction: row-reverse;
    }
  }
}
.justify {
  &-start {
    justify-content: flex-start;
  }
  &-end {
    justify-content: flex-end;
  }
  &-center {
    justify-content: center;
  }
  &-between {
    justify-content: space-between;
  }
  &-around {
    justify-content: space-around;
  }
}
.align {
  &-start {
    align-items: flex-start;
  }
  &-right {
    align-items: flex-end;
  }
  &-center {
    align-items: center;
  }
  &-stretch {
    align-items: stretch;
  }
}
.flex-wrap {
  flex-wrap: wrap;
}
.grow {
  @for $i from 0 through 10 {
    &-#{$i} {
      flex-grow: $i;
    }
  }
}
.shrink {
  @for $i from 0 through 10 {
    &-#{$i} {
      flex-shrink: $i;
    }
  }
}

.visually-hidden {
  position: absolute !important;
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0 !important;
  border: 0 !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden;
  visibility: hidden;
  pointer-events: none;
}
